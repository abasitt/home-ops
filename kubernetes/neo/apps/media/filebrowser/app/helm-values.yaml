---
controllers:
  filebrowser:
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      app:
        image:
          repository: docker.io/filebrowser/filebrowser
          tag: v2.32.0@sha256:593478e3c24c5ea9f5d7478dc549965b7bc7030707291006ce8d0b6162d3454b
        env:
          TZ: ${TIMEZONE}
          FB_DATABASE: /config/filebrowser.db
          FB_ROOT: /media
          FB_LOG: stdout
          FB_NOAUTH: true
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /health
                port: &port 80
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities: { drop: ["ALL"] }
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
          limits:
            memory: 512Mi
defaultPodOptions:
  securityContext:
    runAsNonRoot: true
    runAsUser: 2000
    runAsGroup: 2000
    fsGroup: 2000
    fsGroupChangePolicy: OnRootMismatch
    seccompProfile: { type: RuntimeDefault }
service:
  app:
    controller: filebrowser
    ipFamilyPolicy: PreferDualStack
    ports:
      http:
        port: *port
route:
  app:
    parentRefs:
      - group: ""
        kind: Gateway
        name: private-gateway
        namespace: istio-gateways
    hostnames:
      - "{{ .Release.Name }}.${CLUSTER_DOMAIN}"
    rules:
      - matches:
          - path:
              type: PathPrefix
              value: /
        backendRefs:
          - kind: Service
            port: *port
            name: app
            weight: 100
persistence:
  config:
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 1Gi
    storageClass: openebs-zfs-ssd
    retain: true
  media:
    existingClaim: media-nfs
