---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.41.3.9314-a0bfb8370@sha256:cbefe5f2f44d0519fd72985ed4005b7b55a7eb9dcbdcc3b4d6bb7055730db565
            env:
              TZ: ${TIMEZONE}
              PLEX_ADVERTISE_URL: https://plex.abasitt.tech:443,http://${METALLB_PLEX_V4ADDR}:32400
              PLEX_NO_AUTH_NETWORKS: 192.168.20.0/24
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                memory: 10Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 10000]
        seccompProfile: { type: RuntimeDefault }
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
    service:
      app:
        controller: plex
        type: LoadBalancer
        loadBalancerClass: metallb
        ipFamilyPolicy: PreferDualStack
        annotations:
          metallb.universe.tf/loadBalancerIPs: ${METALLB_PLEX_V6ADDR},${METALLB_PLEX_V4ADDR}
        externalTrafficPolicy: "Local"
        ports:
          http:
            port: 32400
    route:
      app:
        parentRefs:
          - group: ""
            kind: Gateway
            name: external-gateway
            namespace: istio-gateways
        hostnames:
          - plex.${SECRET_DOMAIN}
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - kind: Service
                port: http
                name: app
                weight: 100
    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server
      # Separate PVC for cache to avoid backing up cache files
      cache:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 50Gi
        storageClass: openebs-zfs-ssd
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      contents:
        type: nfs
        server: nfs.home.internal
        path: /z1ank/contents
        globalMounts:
          - path: /data/nas-contents
            readOnly: true

