---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cilium
  namespace: kube-system
spec:
  interval: 15m
  chart:
    spec:
      chart: cilium
      version: 1.13.7
      sourceRef:
        kind: HelmRepository
        name: cilium
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    bpf:
      masquerade: false
      # -- Allow cluster external access to ClusterIP services.
      lbExternalClusterIP: true
    cluster:
      name: home-cluster
      id: 1
    containerRuntime:
      integration: containerd
      socketPath: /var/run/k3s/containerd/containerd.sock
    ipam:
      mode: "cluster-pool"
      # -- Maximum rate at which the CiliumNode custom resource is updated.
      ciliumNodeUpdateRate: "15s"
      operator:
        # -- IPv4 CIDR list range to delegate to individual nodes for IPAM.
        clusterPoolIPv4PodCIDRList: ["10.42.0.0/16"]
        # -- IPv4 CIDR mask size to delegate to individual nodes for IPAM.
        clusterPoolIPv4MaskSize: 24
        # -- IPv6 CIDR list range to delegate to individual nodes for IPAM.
        clusterPoolIPv6PodCIDRList: ["2001:470:ee86:1042::/104"]
        # -- IPv6 CIDR mask size to delegate to individual nodes for IPAM.
        clusterPoolIPv6MaskSize: 120
    tunnel: "disabled"
    autoDirectNodeRoutes: true
    ipv4NativeRoutingCIDR: "10.42.0.0/16"
    ipv6NativeRoutingCIDR: "2001:470:ee86:1042::/112"
    enableIPv4Masquerade: true
    enableIPv6Masquerade: true
    ipv6:
      enabled: true
    bgpControlPlane:
      # -- Enables the BGP control plane.
      enabled: true
    endpointRoutes:
      # -- Enable use of per endpoint routes instead of routing via
      # the cilium_host interface.
      enabled: true
    socketLB:
      # -- Disable socket lb for non-root ns. This is used to enable Istio routing rules.
      hostNamespaceOnly: true
    loadBalancer:
      # -- algorithm is the name of the load balancing algorithm for backend
      # selection e.g. random or maglev
      algorithm: maglev
    nodePort:
      # -- Enable the Cilium NodePort service implementation.
      enabled: true
      # -- Port range to use for NodePort services.
      # range: "30000,32767"
    hubble:
      enabled: true
      metrics:
        enabled:
          - dns:query;ignoreAAAA
          - drop
          - tcp
          - flow
          - port-distribution
          - icmp
          - http
        serviceMonitor:
          enabled: true
      relay:
        enabled: true
        rollOutPods: true
        prometheus:
          serviceMonitor:
            enabled: true
      ui:
        enabled: true
        rollOutPods: true
        ingress:
          enabled: true
          className: nginx
          hosts:
            - &host "hubble.${SECRET_DOMAIN}"
          tls:
            - hosts:
                - *host
    k8sServiceHost: "${KUBE_VIP_ADDR}"
    k8sServicePort: 6443
    kubeProxyReplacement: strict
    kubeProxyReplacementHealthzBindAddr: 0.0.0.0:10256
    operator:
      replicas: 1
      rollOutPods: true
      prometheus:
        enabled: true
        serviceMonitor:
          enabled: true
    prometheus:
      enabled: true
      serviceMonitor:
        enabled: true
    rollOutCiliumPods: true
